[gd_resource type="ShaderMaterial" load_steps=5 format=3 uid="uid://cpf6ppps7epci"]

[ext_resource type="Texture2D" uid="uid://nwfx6fyanx3y" path="res://objects/planet_terrain/earth_like_0.png" id="1_362ku"]

[sub_resource type="Shader" id="Shader_m4u4o"]
code = "shader_type spatial;

uniform sampler2D height_map;
uniform float height_scale = 10.0;
uniform float terrain_scale = 1.0;
uniform sampler2D terran_color;

varying float height;


float sample_height(vec2 point) {
//	vec2 sample_point = point.xy + point.xz + point.zy;
	return 1.0 - texture(height_map, point / terrain_scale).r;
}


void vertex() {
	height = sample_height(UV);
	VERTEX -= NORMAL * height * height_scale;
}



void fragment() {
	ALBEDO = texture(terran_color, vec2(1.0 - height, UV.y)).rgb;
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_8jn46"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_2pt5r"]
noise = SubResource("FastNoiseLite_8jn46")

[resource]
render_priority = 0
shader = SubResource("Shader_m4u4o")
shader_parameter/height_scale = 30.0
shader_parameter/terrain_scale = 1.0
shader_parameter/height_map = SubResource("NoiseTexture2D_2pt5r")
shader_parameter/terran_color = ExtResource("1_362ku")
